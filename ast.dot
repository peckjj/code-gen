digraph AST {
5 [shape=box, label="Location name='x'\nreg: r0\ncode: \nloadAI [BP+16] => r0\ntype: int"];
6 [shape=box, label="Location name='y'\nreg: r1\ncode: \nloadAI [BP+24] => r1\ntype: int"];
4 [shape=box, label="BinaryOp op='+'\nreg: r2\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ntype: int"];
4 -> 5;
4 -> 6;
3 [shape=box, label="Return\nreg: r2\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2"];
3 -> 4;
2 [shape=box, label="Block\nreg: r2\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\nsymbolTable: (empty)"];
2 -> 3;
1 [shape=box, label="FuncDecl name='add'\ncode: \nadd:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ni2i r2 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: \n  x : int {stack offset=16}\n  y : int {stack offset=24}"];
1 -> 2;
9 [shape=box, label="VarDecl name='a'"];
11 [shape=box, label="Location name='a'\nreg: r3\ncode: \nloadAI [BP-8] => r3\ntype: int"];
12 [shape=box, label="Literal value=3\nreg: r4\ncode: \nloadI 3 => r4\ntype: int"];
10 [shape=box, label="Assignment\ncode: \nloadI 3 => r4\nstoreAI r4 => [BP-8]"];
10 -> 11;
10 -> 12;
15 [shape=box, label="Location name='a'\nreg: r5\ncode: \nloadAI [BP-8] => r5\ntype: int"];
16 [shape=box, label="Literal value=2\nreg: r6\ncode: \nloadI 2 => r6\ntype: int"];
14 [shape=box, label="FuncCall name='add'\nreg: r7\ncode: \nloadAI [BP-8] => r5\nloadI 2 => r6\npush r6\npush r5\ncall add\naddI SP, 16 => SP\ni2i RET => r7\ntype: int"];
14 -> 15;
14 -> 16;
13 [shape=box, label="Return\nreg: r7\ncode: \nloadAI [BP-8] => r5\nloadI 2 => r6\npush r6\npush r5\ncall add\naddI SP, 16 => SP\ni2i RET => r7"];
13 -> 14;
8 [shape=box, label="Block\nreg: r7\ncode: \nloadI 3 => r4\nstoreAI r4 => [BP-8]\nloadAI [BP-8] => r5\nloadI 2 => r6\npush r6\npush r5\ncall add\naddI SP, 16 => SP\ni2i RET => r7\nsymbolTable: \n  a : int {stack offset=-8}"];
8 -> 9;
8 -> 10;
8 -> 13;
7 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 3 => r4\nstoreAI r4 => [BP-8]\nloadAI [BP-8] => r5\nloadI 2 => r6\npush r6\npush r5\ncall add\naddI SP, 16 => SP\ni2i RET => r7\ni2i r7 => RET\njump l1\nl1:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 8\nsymbolTable: (empty)"];
7 -> 8;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  add : (int, int) -> int\n  main : () -> int"];
0 -> 1;
0 -> 7;
}
